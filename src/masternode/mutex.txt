class Mutex:public std::mutex
    {
    public:
        Mutex():std::mutex(),holder(){}
        ~Mutex(){assert(holder == mocores::Thread::id());}
        void lock()
        {
            std::mutex::lock();
            holder=mocores::this_thread::get_id();
        }
        void unlock()
        {
            std::mutex::unlock();
            holder=mocores::Thread::id();
        }
        void try_lock()
        {
            std::mutex::try_lock();
        }
        std::mutex::native_handle_type native_handle()
        {
            return std::mutex::native_handle();
        }
        bool isLockedByThisThread() const
        {
            return holder == mocores::this_thread::get_id();
        }
    protected:
        mocores::Thread::id holder;
    };