# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import protocol_pb2 as protocol__pb2



class CallStub(object):
  """The greeting service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Call = channel.unary_unary(
        '/protocol.Call/Call',
        request_serializer=protocol__pb2.CallRequest.SerializeToString,
        response_deserializer=protocol__pb2.CallReply.FromString,
        )


class CallServicer(object):
  """The greeting service definition.
  """

  def Call(self, request, context):
    """Sends a greeting
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CallServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Call': grpc.unary_unary_rpc_method_handler(
          servicer.Call,
          request_deserializer=protocol__pb2.CallRequest.FromString,
          response_serializer=protocol__pb2.CallReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'protocol.Call', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
